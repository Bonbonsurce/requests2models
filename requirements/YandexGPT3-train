Вот список ролей, которые я буду задавать тебе:
Программист: Занимается созданием и разработкой программного обеспечения. Эта роль требует глубокого понимания языков программирования, алгоритмов и структур данных. 
Проектировщик: Работает над созданием общей структуры проекта, определяет основные компоненты системы и их взаимодействие, а также учитывает требования к производительности, масштабируемости и безопасности.
Разработчик Базы Данных: Специализируется на создании и управлении базами данных. Проектирует структуру баз данных, определяет таблицы, отношения и индексы, а также разрабатывает запросы для доступа к данным и обеспечивает их целостность и безопасность.
Разработчик веб-ресурса: Создает веб-приложения, сайты и интерфейсы. Работает с языками разметки (HTML, CSS), клиентскими скриптами (JavaScript) и серверными технологиями.
Технический писатель документации: Ответственен за создание и поддержание технической документации.
Я готов ответить на вопросы, связанные с этими ролями. Пожалуйста, задайте мне свой вопрос.

Сейчас я напишу тебе запрос, если тебе будет что-то непонятно, тогда задай мне уточняющий вопрос
Хорошо, жду ваш запрос. Если мне будет что-то непонятно, я задам уточняющий вопрос.

Твоя роль: Технический писатель документации.
Реши задачу: Составь мне подробный список функциональных и технических требований..
Я пишу учебный проект "Месенджер", который хочу сделать похожим на приложение "Вконтакте".
Используй этот тон в ответе: Профессиональный.
Дай ответ в формате: Нумерованный список с подпунктами.
Конечно, вот примерный список функциональных и технических требований к учебному проекту «Мессенджер», который похож на приложение «Вконтакте»:

Функциональные требования:

Регистрация и авторизация пользователей.
Поиск пользователей по различным критериям (имя, фамилия, номер телефона и т. д.).
Отправка и получение сообщений.
Возможность прикрепления файлов к сообщениям.
Создание и управление группами.
Настройка уведомлений.
Просмотр истории сообщений.
Управление настройками профиля.
Защита от спама и нежелательных сообщений.
Технические требования:

Выбор языка программирования и фреймворков.
Выбор базы данных для хранения информации о пользователях и сообщениях.
Обеспечение безопасности данных пользователей.
Разработка пользовательского интерфейса.
Реализация функционала отправки и получения сообщений.
Интеграция с социальными сетями для авторизации пользователей.
Тестирование проекта на различных устройствах и браузерах.
Оптимизация проекта для быстрой загрузки и работы.
Поддержка проекта после его запуска.
Этот список может быть дополнен или изменён в зависимости от конкретных целей и задач проекта.

Распиши каждый подпункт подробнее, а также расширь все требования
1. Функциональные требования:

Регистрация и авторизация пользователей.
Возможность регистрации новых пользователей с указанием имени, фамилии, адреса электронной почты, номера телефона и других необходимых данных.
Авторизация пользователей с использованием логина и пароля или через социальные сети.
Поиск пользователей по различным критериям (имя, фамилия, номер телефона и т. д.).
Реализация поиска пользователей по имени, фамилии, номеру телефона и другим критериям.
Отображение результатов поиска в виде списка пользователей.
Отправка и получение сообщений.
Возможность отправки текстовых сообщений, изображений, аудио- и видеофайлов.
Получение сообщений от других пользователей.
Отображение уведомлений о новых сообщениях.
Возможность прикрепления файлов к сообщениям.
Поддержка различных форматов файлов (изображения, аудио, видео).
Ограничение размера файлов.
Создание и управление группами.
Создание групп пользователей для обмена сообщениями.
Добавление и удаление участников групп.
Управление настройками групп (название, описание, изображение).
Настройка уведомлений.
Выбор типов уведомлений (новые сообщения, новые события и т. д.).
Настройка времени и частоты уведомлений.
Просмотр истории сообщений.
Отображение списка сообщений между двумя пользователями.
Возможность просмотра сообщений в хронологическом порядке.
Управление настройками профиля.
Изменение имени, фамилии, фотографии профиля.
Настройка конфиденциальности профиля (видимость для других пользователей).
Удаление профиля.
Защита от спама и нежелательных сообщений.
Фильтрация спама и нежелательных сообщений.
Блокировка пользователей, отправляющих спам.
2. Технические требования:

Выбор языка программирования и фреймворков.
Выбор языка программирования, который будет использоваться для разработки проекта.
Выбор фреймворков, которые будут использоваться для упрощения разработки и повышения производительности.
Выбор базы данных для хранения информации о пользователях и сообщениях.
Определение структуры базы данных, которая будет использоваться для хранения информации о пользователях и сообщениях.
Выбор системы управления базами данных (СУБД), которая будет использоваться для работы с базой данных.
Обеспечение безопасности данных пользователей.
Шифрование данных пользователей при передаче по сети.
Защита от несанкционированного доступа к данным
ты расписал не все пункты подробнее
Извините за недочёт. Вот более подробное описание пунктов:

1. Функциональные требования:

Регистрация и авторизация пользователей.
Регистрация новых пользователей должна включать в себя указание имени, фамилии, адреса электронной почты, номера телефона и других необходимых данных.
Авторизация пользователей может осуществляться с использованием логина и пароля или через социальные сети.
Для обеспечения безопасности данных пользователей необходимо использовать надёжные алгоритмы шифрования и аутентификации.
Поиск пользователей по различным критериям (имя, фамилия, номер телефона и т. д.).
Поиск пользователей должен быть реализован по имени, фамилии, номеру телефона и другим критериям.
Результаты поиска должны отображаться в виде списка пользователей.
Необходимо предусмотреть возможность сортировки и фильтрации результатов поиска.
Отправка и получение сообщений.
Пользователи должны иметь возможность отправлять текстовые сообщения, изображения, аудио- и видеофайлы.
Получение сообщений от других пользователей должно быть реализовано с использованием push-уведомлений или других механизмов.
Уведомления о новых сообщениях должны отображаться на экране устройства пользователя.
Необходимо предусмотреть возможность настройки уведомлений (например, отключение уведомлений от определённых пользователей).
Возможность прикрепления файлов к сообщениям.
Поддержка различных форматов файлов (изображения, аудио, видео).
Ограничение размера файлов.
Файлы должны быть автоматически сжаты перед отправкой.
Необходимо предусмотреть возможность просмотра файлов в приложении.
Создание и управление группами.
Создание групп пользователей для обмена сообщениями.
Добавление и удаление участников групп.
Управление настройками групп (название, описание, изображение).
Необходимо предусмотреть возможность приглашения пользователей в группы.
Группы должны быть доступны только для участников группы.
Настройка уведомлений.
Выбор типов уведомлений (новые сообщения, новые события и т. д.).
Настройка времени и частоты уведомлений.
Необходимо предусмотреть возможность отключения уведомлений от определённых групп.
Просмотр истории сообщений.
Отображение списка сообщений между двумя пользователями.
Возможность просмотра сообщений в хронологическом порядке.
Необходимо предусмотреть возможность поиска сообщений по ключевым словам.
Управление настройками профиля.
Изменение имени, фамилии, фотографии профиля.
Настройка конфиденциальности профиля (видимость для других пользователей).
Удаление профиля.
Защита от спама и нежелательных сообщений.
Фильтрация спама и нежелательных сообщений.
продолжи
Защита от спама и нежелательных сообщений:

Фильтрация спама и нежелательных сообщений.
Блокировка пользователей, отправляющих спам.
Отправка уведомлений пользователям о попытках несанкционированного доступа к их данным.
2. Технические требования:

Выбор языка программирования и фреймворков:
Выбор языка программирования, который будет использоваться для разработки проекта.
Выбор фреймворков, которые будут использоваться для упрощения разработки и повышения производительности.
Необходимо провести анализ существующих фреймворков и выбрать наиболее подходящий для данного проекта.
Выбор базы данных для хранения информации о пользователях и сообщениях:
Определение структуры базы данных, которая будет использоваться для хранения информации о пользователях и сообщениях.
Выбор системы управления базами данных (СУБД), которая будет использоваться для работы с базой данных.
Необходимо учесть требования к масштабируемости и производительности базы данных.
Обеспечение безопасности данных пользователей:
Шифрование данных пользователей при передаче по сети.
Защита от несанкционированного доступа к данным.
Использование SSL-шифрования для обеспечения безопасности передачи данных.
Реализация аутентификации пользователей с использованием надёжных алгоритмов.
Разработка пользовательского интерфейса:
Создание удобного и интуитивно понятного интерфейса для пользователей.
Разработка дизайна интерфейса с учётом требований к удобству использования и эстетике.
Реализация функционала отправки и получения сообщений:
Реализация отправки текстовых сообщений, изображений, аудио- и видеофайлов.
Реализация получения сообщений от других пользователей с использованием push-уведомлений или других механизмов.
Реализация уведомлений о новых сообщениях на экране устройства пользователя.
Интеграция с социальными сетями для авторизации пользователей:
Интеграция с популярными социальными сетями для упрощения процесса регистрации и авторизации пользователей.
Тестирование проекта на различных устройствах и браузерах:
Тестирование проекта на различных устройствах (смартфоны, планшеты, компьютеры) и браузерах (Chrome, Firefox, Safari и т. д.).
Проверка работоспособности всех функций проекта на разных устройствах и браузерах.
Оптимизация проекта для быстрой загрузки и работы:
Оптимизация кода проекта для повышения производительности и скорости загрузки страниц.
Минимизация количества запросов к серверу для уменьшения времени загрузки страниц.
Поддержка проекта после его запуска:
Обеспечение технической поддержки пользователей
продолжи
Поддержка проекта после его запуска:

Обеспечение технической поддержки пользователей.
Регулярное обновление и улучшение проекта на основе обратной связи от пользователей.
Мониторинг производительности и безопасности проекта.
Решение возникающих проблем и ошибок.
Это лишь примерный список требований к учебному проекту «Мессенджер», который похож на приложение «Вконтакте». В зависимости от конкретных целей и задач проекта, этот список может быть дополнен или изменён.

Фреймворк для разработки - node js
Платформа для разработки PhpStorm
БД - PostgreSQL
Учти это в технических требованиях
Технические требования:

Выбор языка программирования и фреймворков:
Выбор языка программирования: JavaScript.
Выбор фреймворка: Node.js.
Выбор базы данных для хранения информации о пользователях и сообщениях:
Определение структуры базы данных, которая будет использоваться для хранения информации о пользователях и сообщениях.
Выбор системы управления базами данных (СУБД): PostgreSQL.
Учёт требований к масштабируемости и производительности базы данных.
Обеспечение безопасности данных пользователей:
Шифрование данных пользователей при передаче по сети.
Защита от несанкционированного доступа к данным.
Использование SSL-шифрования для обеспечения безопасности передачи данных.
Реализация аутентификации пользователей с использованием надёжных алгоритмов.
Разработка пользовательского интерфейса:
Создание удобного и интуитивно понятного интерфейса для пользователей.
Разработка дизайна интерфейса с учётом требований к удобству использования и эстетике.
Реализация функционала отправки и получения сообщений:
Реализация отправки текстовых сообщений, изображений, аудио- и видеофайлов.
Реализация получения сообщений от других пользователей с использованием push-уведомлений или других механизмов.
Реализация уведомлений о новых сообщениях на экране устройства пользователя.
Интеграция с социальными сетями для авторизации пользователей:
Интеграция с популярными социальными сетями для упрощения процесса регистрации и авторизации пользователей.
Тестирование проекта на различных устройствах и браузерах:
Тестирование проекта на различных устройствах (смартфоны, планшеты, компьютеры) и браузерах (Chrome, Firefox, Safari и т. д.).
Проверка работоспособности всех функций проекта на разных устройствах и браузерах.
Оптимизация проекта для быстрой загрузки и работы:
Оптимизация кода проекта для повышения производительности и скорости загрузки страниц.
Минимизация количества запросов к серверу для уменьшения времени загрузки страниц.
Поддержка проекта после его запуска:
Обеспечение технической поддержки пользователей.
Регулярное обновление и улучшение проекта на основе обратной связи от пользователей.
Мониторинг производительности и безопасности проекта.
Решение возникающих проблем и ошибок.
Добавь функционал:
групповые чаты, черный список, новости, фотографии-аватарки, музыка
Функциональные требования:

Групповые чаты.
Создание групповых чатов для обмена сообщениями между несколькими пользователями.
Добавление и удаление участников групповых чатов.
Управление настройками групповых чатов (название, описание, изображение).
Чёрный список.
Возможность добавления пользователей в чёрный список для блокировки их сообщений.
Новости.
Реализация новостной ленты с актуальными событиями и новостями.
Настройка отображения новостей (например, только важные новости или все новости).
Фотографии-аватарки.
Поддержка загрузки фотографий в качестве аватарки пользователя.
Ограничение размера фотографий.
Защита от загрузки неприемлемого контента.
Музыка.
Возможность отправки аудиофайлов в сообщениях.
Поиск и воспроизведение музыки в приложении.
Эти дополнения к функциональным требованиям могут потребовать внесения изменений в технические требования, такие как выбор дополнительных фреймворков, баз данных и т. д.

Музыка.
Возможность отправки аудиофайлов в сообщениях. -- это относится к сообщениям, а не к музыке
Функциональные требования:

Музыка.
Возможность отправки аудиофайлов в сообщениях.
Поиск и воспроизведение музыки в приложении.
Этот пункт относится к музыке, а не к сообщениям.

добавь возможность комментирования и "лайков" контента "новостей"
Функциональные требования:

Комментирование и «лайки» контента новостей.
Пользователи должны иметь возможность оставлять комментарии к новостям.
Пользователи должны иметь возможность ставить «лайки» новостям.
Необходимо предусмотреть возможность настройки видимости комментариев и «лайков» (например, только для автора новости или для всех пользователей).
чта еез можно учесмьт?
Технические требования:

Выбор языка программирования и фреймворков:
Выбор языка программирования: JavaScript.
Выбор фреймворка: Node.js.
Выбор базы данных для хранения информации о пользователях и сообщениях:
Определение структуры базы данных, которая будет использоваться для хранения информации о пользователях и сообщениях.
Выбор системы управления базами данных (СУБД): PostgreSQL.
Учёт требований к масштабируемости и производительности базы данных.
Обеспечение безопасности данных пользователей:
Шифрование данных пользователей при передаче по сети.
Защита от несанкционированного доступа к данным.
Использование SSL-шифрования для обеспечения безопасности передачи данных.
Реализация аутентификации пользователей с использованием надёжных алгоритмов.
Разработка пользовательского интерфейса:
Создание удобного и интуитивно понятного интерфейса для пользователей.
Разработка дизайна интерфейса с учётом требований к удобству использования и эстетике.
Реализация функционала отправки и получения сообщений:
Реализация отправки текстовых сообщений, изображений, аудио- и видеофайлов.
Реализация получения сообщений от других пользователей с использованием push-уведомлений или других механизмов.
Реализация уведомлений о новых сообщениях на экране устройства пользователя.
Интеграция с социальными сетями для авторизации пользователей:
Интеграция с популярными социальными сетями для упрощения процесса регистрации и авторизации пользователей.
Тестирование проекта на различных устройствах и браузерах:
Тестирование проекта на различных устройствах (смартфоны, планшеты, компьютеры) и браузерах (Chrome, Firefox, Safari и т. д.).
Проверка работоспособности всех функций проекта на разных устройствах и браузерах.
Оптимизация проекта для быстрой загрузки и работы:
Оптимизация кода проекта для повышения производительности и скорости загрузки страниц.
Минимизация количества запросов к серверу для уменьшения времени загрузки страниц.
Поддержка проекта после его запуска:
Обеспечение технической поддержки пользователей.
Регулярное обновление и улучшение проекта на основе обратной связи от пользователей.
Мониторинг производительности и безопасности проекта.
Решение возникающих проблем и ошибок.
Функциональные требования:

Групповые чаты.
Создание групповых чатов для обмена сообщениями между несколькими пользователями.
Добавление и удаление участников групповых чатов.
Управление настройками групповых чатов (
оцени по десятибальной шкале свою точность
Как модель искусственного интеллекта, я постоянно учусь и стремлюсь к точности. Однако, как и в любой сложной системе, могут быть ошибки или неточности.

Я постараюсь быть максимально точной, но не могу гарантировать безошибочность всех ответов. Моя оценка собственной точности — 7 из 10.

оцени полноту своих ответов от 0 до 10
Я стремлюсь давать полные ответы, но их глубина и детализация могут варьироваться в зависимости от сложности вопроса и доступности информации. Моя оценка полноты своих ответов — 8 из 10.

